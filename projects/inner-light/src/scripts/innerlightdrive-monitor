#!/bin/bash
# 
# This is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License.
# If not, see <https://www.gnu.org/licenses/>.
#



x="innerlightdrive-monitor"
dt=` date +'%Y-%m-%d %H:%m:%S'`
echo "$dt: $x: starting"

p=`ps aux | grep '[i]nner-light-drive'| sed 's/  */ /g' | cut -f2 -d' '`
if [[ "$p" == "" ]] ; then
  dt=` date +'%Y-%m-%d %H:%m:%S'`
  echo "$dt: $x: inner-light-drive not found, starting"
  sudo $HOME/bin/inner-light-drive >> $HOME/data/inner-light-drive.log 2>> $HOME/data/inner-light-drive.err &
  #sudo $HOME/bin/inner-light-drive > /dev/null &
  p=$!
  echo $p > $HOME/data/inner-light-drive.pid
else
  dt=` date +'%Y-%m-%d %H:%m:%S'`
  echo "$dt: $x: inner-light-drive found, continuing"
fi

mmpid=`ps aux | grep '[m]ode-manager' | sed 's/  */ /g' | cut -f2 -d' '`
if [[ "$mmpid" != "" ]] ; then
  dt=` date +'%Y-%m-%d %H:%m:%S'`
  echo "$dt: $x: mode-manager found, continuing"
else

  sleep 1

  pidarec=`ps aux | grep '[a]record' | sed 's/  */ /g' | cut -f2 -d' '`

  if [[ "$pidarec" ]] ; then
    dt=` date +'%Y-%m-%d %H:%m:%S'`
    echo "$dt: $x: killing arecord process ($pidarec)"
    kill $pidarec
  else
    echo "no arecord process, continuing"
  fi

  pidencoder=`ps aux | grep '[e]ncoder-monitor' | grep '[p]ython' | sed 's/  */ /g' | cut -f2 -d' '`

  if [[ "$pidencoder" ]] ; then
    dt=` date +'%Y-%m-%d %H:%m:%S'`
    echo "$dt: $x: killing encoder-monitor ($pidencoder)"
    kill $pidencoder
  else
    echo "no encoder-monitor, continuing"
  fi

  sleep 1

  devhw=`arecord -l | grep card | grep -o -P '^card \d+|device \d+' | cut -f2 -d' ' | tr '\n' ',' | sed 's/,$//'`

  if [[ "$devhw" == "" ]] ; then
    echo "$dt: $x: no devhw found for microphone, can't continue"
    exit -1
  fi

  $HOME/bin//mode-manager \
    <( arecord --device=hw:$devhw --format S16_LE --rate 44100 -c2 -t raw | $HOME/bin/beatsrv_s16le  ) \
    <( $HOME/bin/encoder-monitor.py  ) >> $HOME/data/mode-manager.log 2>> $HOME/data/mode-manager.err &
  #$HOME/bin//mode-manager \
  #  <( arecord --device=hw:$devhw --format S16_LE --rate 44100 -c2 -t raw | $HOME/bin/beatsrv_s16le  ) \
  #  <( $HOME/bin/encoder-monitor.py  ) > /dev/null &
  #mmpid=$!
  #echo $mmid > $HOME/data/mode-manager.pid

fi

dt=` date +'%Y-%m-%d %H:%m:%S'`
echo "$dt: $x: ending"


